<?php

https://www.tutorialrepublic.com/php-reference/php-error-levels.php

/*
E_ERROR	            1	A fatal run-time error, that can't be recovered from. The execution of the script is stopped immediately.
E_WARNING	        2	A run-time warning. It is non-fatal and most errors tend to fall into this category. The execution of the script is not stopped.
E_PARSE 	        4	The compile-time parse error. Parse errors should only be generated by the parser.
E_NOTICE	        8	A run-time notice indicating that the script encountered something that could possibly an error, although the situation could also occur when running a script normally.
E_CORE_ERROR	    16	A fatal error that occur during the PHP's engine initial startup. This is like an E_ERROR, except it is generated by the core of PHP.
E_CORE_WARNING	    32	A non-fatal error that occur during the PHP's engine initial startup. This is like an E_WARNING, except it is generated by the core of PHP.
E_COMPILE_ERROR	    64	A fatal error that occur while the script was being compiled. This is like an E_ERROR, except it is generated by the Zend Scripting Engine.
E_COMPILE_WARNING	128	A non-fatal error occur while the script was being compiled. This is like an E_WARNING, except it is generated by the Zend Scripting Engine.
E_USER_ERROR	    256	A fatal user-generated error message. This is like an E_ERROR, except it is generated by the PHP code using the function trigger_error() rather than the PHP engine.
E_USER_WARNING	    512	A non-fatal user-generated warning message. This is like an E_WARNING, except it is generated by the PHP code using the function trigger_error() rather than the PHP engine
E_USER_NOTICE	    1024	A user-generated notice message. This is like an E_NOTICE, except it is generated by the PHP code using the function trigger_error() rather than the PHP engine.
E_STRICT	        2048	Not strictly an error, but triggered whenever PHP encounters code that could lead to problems or forward incompatibilities
E_RECOVERABLE_ERROR	4096	A catchable fatal error. Although the error was fatal, it did not leave the PHP engine in an unstable state. If the error is not caught by a user defined error handler (see set_error_handler()), the application aborts as it was an E_ERROR.
E_DEPRECATED	    8192	A run-time notice indicating that the code will not work in future versions of PHP
E_USER_DEPRECATED	16384	A user-generated warning message. This is like an E_DEPRECATED, except it is generated by the PHP code using the function trigger_error() rather than the PHP engine.
E_ALL	            32767	All errors and warnings, except of level E_STRICT prior to PHP 5.4.0.
*/

//typical errors
//http://coursesweb.net/php-mysql/common-php-errors-solution_t#perr18_17

